import a from"node:path";import o from"node:fs";import{spawn as w}from"node:child_process";var[h,p,u]=function(){if(m())return["venv","python.exe","python"];if(d())return["venv","python3","python3"];if(v())return["venv","python3","python3"];throw new Error(`${process.platform} has not been supported.`)}();function m(){return process.platform==="win32"}function d(){return process.platform==="darwin"}function v(){return process.platform==="linux"}function c(...t){return new Promise(function(n,e){let f="",l="",s=w(t.shift(),t);s.stdout.on("data",function(r){f+=r.toString()}),s.stderr.on("data",function(r){l+=r.toString()}),s.on("error",function(r){e(r)}),s.on("exit",function(r,x){n({stdout:f,stderr:l})})})}function y(t){o.existsSync(t)||o.mkdirSync(t,{recursive:!0})}function P(t){o.existsSync(t)&&o.rmSync(t,{recursive:!0})}var i=class{constructor(n){this.installationPath=n||".",this.venvPath=a.join(this.installationPath,h),m()?this.pythonPath=a.join(this.installationPath,h,"Scripts",p):d()?this.pythonPath=a.join(this.installationPath,h,"bin",p):v()&&(this.pythonPath=a.join(this.installationPath,h,"bin",p))}};i.prototype.getPythonCommand=function(){return this.inInitialized()?this.pythonPath:u};i.prototype.inInitialized=function(){return o.existsSync(this.installationPath)&&o.existsSync(this.venvPath)&&o.existsSync(this.pythonPath)};i.prototype.init=async function(t){if(!u)throw new Error(`${process.platform} has not been supported.`);if(!this.inInitialized()&&(y(this.installationPath),t&&P(this.venvPath),y(this.venvPath),await c(u,"-m","venv",this.venvPath),!this.inInitialized()))throw new Error("Could not create venv.");return this};i.prototype.destory=async function(){return P(this.venvPath),this};i.prototype.freeze=async function(){return await c(this.getPythonCommand(),"-m","pip","freeze")};i.prototype.getModules=async function(){let{stdout:t,stderr:n}=await this.freeze();return t.replace(/\r\n/g,`
`).replace(/\n$/,"").split(/\n/).map(function(e){return{name:e.split("==")[0],version:e.split("==")[1]}})};i.prototype.isInstalled=async function(t){let n=await this.getModules();for(let e of n)if(e.name.indexOf(t)===0)return!0;return!1};i.prototype.install=async function(t,n){return await c(this.getPythonCommand(),"-m","pip","install",t,...Array.isArray(n)?n:[])};i.prototype.exec=async function(t,n){return await c(this.getPythonCommand(),t,...Array.isArray(n)?n:[])};export{i as Py};
